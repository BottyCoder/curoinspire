
Hello Node!
This project includes a Node.js server script and a web page that connects to it. The front-end page presents a form the visitor can use to submit a color name, sending the submitted value to the back-end API running on the server. The server returns info to the page that allows it to update the display with the chosen color. üé®

Node.js is a popular runtime that lets you run server-side JavaScript. This project uses the Fastify framework and explores basic templating with Handlebars.

Last updated: 14 August 2023

Prerequisites
You'll get best use out of this project if you're familiar with basic JavaScript. If you've written JavaScript for client-side web pages this is a little different because it uses server-side JS, but the syntax is the same!

What's in this project?
‚Üê README.md: That‚Äôs this file, where you can tell people what your cool website does and how you built it.

‚Üê public/style.css: The styling rules for the pages in your site.

‚Üê server.js: The Node.js server script for your new site. The JavaScript defines the endpoints in the site back-end, one to return the homepage and one to update with the submitted color. Each one sends data to a Handlebars template which builds these parameter values into the web page the visitor sees.

‚Üê package.json: The NPM packages for your project's dependencies.

‚Üê src/: This folder holds the site template along with some basic data files.

‚Üê src/pages/index.hbs: This is the main page template for your site. The template receives parameters from the server script, which it includes in the page HTML. The page sends the user submitted color value in the body of a request, or as a query parameter to choose a random color.

‚Üê src/colors.json: A collection of CSS color names. We use this in the server script to pick a random color, and to match searches against color names.

‚Üê src/seo.json: When you're ready to share your new site or add a custom domain, change SEO/meta settings in here.

Try this next üèóÔ∏è
Take a look in TODO.md for next steps you can try out in your new site!

Want a minimal version of this project to build your own Node.js app? Check out Blank Node!

Unsupported image

You built this with Glitch!
Glitch is a friendly community where millions of people come together to build web apps and websites.

Need more help? Check out our Help Center for answers to any common questions.
Ready to make it official? Become a paid Glitch member to boost your app with private sharing, more storage and memory, domains and more.
/messagestatus.html

Enable "Accessible Terminal" in Workspace Settings to use a screen reader with the shell.
Chats
Archived
whatsapp status webhook curl testing
1 minute ago
supabase messages log table data writing method
1 hour ago
Tailwind CDN Update in Messagestatus HTML
8 days ago
can you resend me the curl for testing the status webhook on live

MS

marc189
Assistant
just now
Based on the codebase, I can help you test the WhatsApp status webhook. Here's a curl command to test it:

curl -X POST http://localhost:3000/whatsapp-status-webhook \
-H "Content-Type: application/json" \
-d '{
  "object": "whatsapp_business_account",
  "entry": [{
    "id": "123456789",
    "changes": [{
      "value": {
        "statuses": [{
          "id": "wamid.123456789",
          "status": "delivered",
          "timestamp": "1673691797",
          "recipient_id": "27123456789",
          "errors": []
        }]
      }
    }]
  }]
}'
This will simulate a WhatsApp status update webhook call. The webhook expects:

A message ID (wamid)
Status (delivered/read/failed)
Timestamp (Unix format)
Recipient phone number
Optional error details
You can modify the status, timestamp and recipient_id values to test different scenarios. The server will log the webhook details and update the status in your Supabase database.

Remember to replace localhost:3000 with your actual deployed Replit URL when testing against the live environment.

i am looking for a curl to test https://inspire.botforce.co.za/whatsapp-status-webhook

MS

marc189
Assistant
just now
Based on the codebase, here's a curl command to test the WhatsApp status webhook:

curl -X POST https://inspire.botforce.co.za/whatsapp-status-webhook \
-H "Content-Type: application/json" \
-d '{
  "object": "whatsapp_business_account",
  "entry": [{
    "id": "123456789",
    "changes": [{
      "value": {
        "statuses": [{
          "id": "wamid.123456789",
          "status": "delivered",
          "timestamp": "1673691797",
          "recipient_id": "27123456789",
          "errors": []
        }]
      }
    }]
  }]
}'
This simulates a WhatsApp status update with:

Message ID (wamid.123456789)
Status (delivered)
Timestamp (Unix format)
Recipient phone number (27123456789)
You can modify these values to test different scenarios. The webhook will process the status and update your Supabase database accordingly.

Assistant mode

advanced
Claude 3.5 Sonnet V2

Ask Assistant, use @ to include specific files...
Search
Time
Deployment
Source
Log
2025-04-03 09:05:11.93
77bb5e2c
User
{
2025-04-03 09:06:10.84
77bb5e2c
User
"x-replit-user-url": ""
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
Body: {
2025-04-03 09:06:10.84
77bb5e2c
User
"object": "whatsapp_business_account",
2025-04-03 09:06:10.84
77bb5e2c
User
"entry": [
2025-04-03 09:06:10.84
77bb5e2c
User
{
2025-04-03 09:06:10.84
77bb5e2c
User
"id": "456033570920641",
2025-04-03 09:06:10.84
77bb5e2c
User
"changes": [
2025-04-03 09:06:10.84
77bb5e2c
User
{
2025-04-03 09:06:10.84
77bb5e2c
User
"value": {
2025-04-03 09:06:10.84
77bb5e2c
User
"messaging_product": "whatsapp",
2025-04-03 09:06:10.84
77bb5e2c
User
"metadata": {
2025-04-03 09:06:10.84
77bb5e2c
User
"display_phone_number": "27639006415",
2025-04-03 09:06:10.84
77bb5e2c
User
"phone_number_id": "446043865255795"
2025-04-03 09:06:10.84
77bb5e2c
User
},
2025-04-03 09:06:10.84
77bb5e2c
User
"statuses": [
2025-04-03 09:06:10.84
77bb5e2c
User
{
2025-04-03 09:06:10.84
77bb5e2c
User
"id": "wamid.HBgLMjc3OTYwNDk4MTIVAgARGBJFQjczRkU2QTgzOTI5QTcwNUUA",
2025-04-03 09:06:10.84
77bb5e2c
User
"status": "read",
2025-04-03 09:06:10.84
77bb5e2c
User
"timestamp": "1743663968",
2025-04-03 09:06:10.84
77bb5e2c
User
"recipient_id": "27796049812",
2025-04-03 09:06:10.84
77bb5e2c
User
"conversation": {
2025-04-03 09:06:10.84
77bb5e2c
User
"id": "905826cd0a848583fcfd58269629741c",
2025-04-03 09:06:10.84
77bb5e2c
User
"origin": {
2025-04-03 09:06:10.84
77bb5e2c
User
"type": "utility"
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
},
2025-04-03 09:06:10.84
77bb5e2c
User
"pricing": {
2025-04-03 09:06:10.84
77bb5e2c
User
"billable": true,
2025-04-03 09:06:10.84
77bb5e2c
User
"pricing_model": "CBP",
2025-04-03 09:06:10.84
77bb5e2c
User
"category": "utility"
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
]
2025-04-03 09:06:10.84
77bb5e2c
User
},
2025-04-03 09:06:10.84
77bb5e2c
User
"field": "messages"
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
]
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
]
2025-04-03 09:06:10.84
77bb5e2c
User
}
2025-04-03 09:06:10.84
77bb5e2c
User
================================
2025-04-03 09:06:10.84
77bb5e2c
User
Message ID: wamid.HBgLMjc3OTYwNDk4MTIVAgARGBJFQjczRkU2QTgzOTI5QTcwNUUA
2025-04-03 09:06:10.84
77bb5e2c
User
Status: read
2025-04-03 09:06:10.84
77bb5e2c
User
Timestamp: 1743663968
2025-04-03 09:06:10.84
77bb5e2c
User
Recipient ID: 27796049812
2025-04-03 09:06:10.96
77bb5e2c
User
Error finding existing record: {
2025-04-03 09:06:10.96
77bb5e2c
User
code: 'PGRST116',
2025-04-03 09:06:10.96
77bb5e2c
User
details: 'The result contains 0 rows',
2025-04-03 09:06:10.96
77bb5e2c
User
hint: null,
